/*
 * Copyright 2024 VEuPathDB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package org.veupathdb.lib.cli.diamond.opts

// THIS IS ONLY USED WHEN COMPILED WITH 'EXTRA' AND IT IS UNCLEAR WHAT FLAG GOES
// WITH WHAT COMMAND.  ADD A GENERAL WARNING TO ALL PROPERTIES IN THIS TYPE!
interface HiddenOptionContainer {
  ("match1", 0, "", match_file1)
  ("match2", 0, "", match_file2)
  ("seed-freq", 0, "maximum seed frequency", max_seed_freq, -15.0)
  ("space-penalty", 0, "", space_penalty, 0.5)
  ("reverse", 0, "", reverse)
  ("neighborhood-score", 0, "", neighborhood_score)
  ("seed-weight", 'w', "", seed_weight, 7u)
  ("idl", 0, "", id_left)
  ("idr", 0, "", id_right)
  ("idn", 0, "", id_n)
  ("bmatch", 0, "", bmatch)
  ("bmismatch", 0, "", bmismatch)
  ("bcutoff", 0, "", bcutoff)
  ("ants", 0, "", n_ants, uint64_t(100))
  ("rho", 0, "", rho, 0.99)
  ("p_best", 0, "", p_best, 0.05)
  ("d_exp", 0, "", d_exp, 1.0)
  ("d_new", 0, "", d_new, 1.0)
  ("score-estimate-factor", 0, "", score_estimate_factor, 0.0)
  ("diag-min-estimate", 0, "", diag_min_estimate, 17)
  ("path-cutoff", 0, "", path_cutoff, 0.92)
  ("sw", 0, "", use_smith_waterman)
  ("superblock", 0, "", superblock, 128)
  ("max-cells", 0, "", max_cells, 10000000u)
  ("load-balancing", 0, "", load_balancing, (unsigned)Config::query_parallel)
  ("log-query", 0, "", log_query)
  ("log-subject", 0, "", log_subject)
  ("palign", 0, "", threads_align)
  ("score-ratio", 0, "", score_ratio, 0.9)
  ("fetch-size", 0, "trace point fetch size", fetch_size, 4096u)
  ("target-fetch-size", 0, "number of target sequences to fetch for seed extension", target_fetch_size, 4u)
  ("rank-factor", 0, "", rank_factor, -1.0)
  ("transcript-len-estimate", 0, "", transcript_len_estimate, 1.0)
  ("family-counts", 0, "", family_counts_file)
  ("radix-cluster-buffered", 0, "", radix_cluster_buffered)
  ("join-split-size", 0, "", join_split_size, 100000u)
  ("join-split-key-len", 0, "", join_split_key_len, 17u)
  ("radix-bits", 0, "", radix_bits, 8u)
  ("join-ht-factor", 0, "", join_ht_factor, 1.3)
  ("sort-join", 0, "", sort_join)
  ("simple-freq", 0, "", simple_freq)
  ("freq-treshold", 0, "", freq_treshold)
  ("use-dataset-field", 0, "", use_dataset_field)
  ("store-query-quality", 0, "", store_query_quality)
  ("swipe-chunk-size", 0, "", swipe_chunk_size, 256u)
  ("hard-masked", 0, "", hardmasked)
  ("cbs-window", 0, "", cbs_window, 40)
  ("no-dict", 0, "", no_dict)
  ("upgma-edge-limit", 0, "", upgma_edge_limit, (uint64_t)10000000)
  ("tree", 0, "", tree_file)
  ("upgma-dist", 0, "", upgma_dist)
  ("upgma-input", 0, "", upgma_input)
  ("log-extend", 0, "", log_extend)
  ("chaining-maxgap", 0, "", chaining_maxgap, 2000)
  ("tantan-maxRepeatOffset", 0, "maximum tandem repeat period to consider (50)", tantan_maxRepeatOffset, 15)
  ("tantan-ungapped", 0, "use tantan masking in ungapped mode", tantan_ungapped)
  ("chaining-range-cover", 0, "", chaining_range_cover, (size_t)8)
  ("no-swipe-realign", 0, "", no_swipe_realign)
  ("chaining-maxnodes", 0, "", chaining_maxnodes)
  ("cutoff-score-8bit", 0, "", cutoff_score_8bit, 240)
  ("min-band-overlap", 0, "", min_band_overlap, 0.0)
  ("min-realign-overhang", 0, "", min_realign_overhang, 30)
  ("ungapped-window", 0, "", ungapped_window, 48)
  ("gapped-filter-diag-score", 0, "", gapped_filter_diag_bit_score, 12.0)
  ("gapped-filter-window", 0, "", gapped_filter_window, 200)
  ("output-hits", 0, "", output_hits)
  ("ungapped-evalue", 0, "", ungapped_evalue_, -1.0)
  ("ungapped-evalue-short", 0, "", ungapped_evalue_short_, -1.0)
  ("no-logfile", 0, "", no_logfile)
  ("band-bin", 0, "", band_bin, 24)
  ("col-bin", 0, "", col_bin, 400)
  ("self", 0, "", self)
  ("trace-pt-fetch-size", 0, "", trace_pt_fetch_size, (int64_t)10e9)
  ("tile-size", 0, "", tile_size, (uint32_t)1024)
  ("short-query-ungapped-bitscore", 0, "", short_query_ungapped_bitscore, 25.0)
  ("short-query-max-len", 0, "", short_query_max_len, 60)
  ("gapped-filter-evalue1", 0, "", gapped_filter_evalue1, 2000.0)
  ("ext-yield", 0, "", ext_min_yield)
  ("full-sw-len", 0, "", full_sw_len)
  ("relaxed-evalue-factor", 0, "", relaxed_evalue_factor, 1.0)
  ("type", 0, "", type)
  ("raw", 0, "", raw)
  ("chaining-len-cap", 0, "", chaining_len_cap, 2.0)
  ("chaining-min-nodes", 0, "", chaining_min_nodes, (size_t)200)
  ("fast-tsv", 0, "", fast_tsv)
  ("target-parallel-verbosity", 0, "", target_parallel_verbosity, UINT_MAX)
  ("query-memory", 0, "", query_memory)
  ("memory-intervals", 0, "", memory_intervals, (size_t)2)
  ("seed-hit-density", 0, "", seedhit_density)
  ("chunk-size-multiplier", 0, "", chunk_size_multiplier, (size_t)4)
  ("score-drop-factor", 0, "", ranking_score_drop_factor, 0.95)
  ("left-most-interval", 0, "", left_most_interval, 32)
  ("ranking-cutoff-bitscore", 0, "", ranking_cutoff_bitscore, 25.0)
  ("no-forward-fp", 0, "", no_forward_fp)
  ("no-ref-masking", 0, "", no_ref_masking)
  ("target-bias", 0, "", target_bias)
  ("output-fp", 0, "", output_fp)
  ("family-cap", 0, "", family_cap)
  ("cbs-matrix-scale", 0, "", cbs_matrix_scale, 1)
  ("query-count", 0, "", query_count, (size_t)1)
  ("cbs-angle", 0, "", cbs_angle, -1.0)
  ("cbs-err-tolerance", 0, "", cbs_err_tolerance, 0.00000001)
  ("cbs-it-limit", 0, "", cbs_it_limit, 2000)
  ("hash_join_swap", 0, "", hash_join_swap)
  ("deque_bucket_size", 0, "", deque_bucket_size, (size_t)524288)
  ("query-match-distance-threshold", 0, "", query_match_distance_threshold, -1.0)
  ("length-ratio-threshold", 0, "", length_ratio_threshold, -1.0)
  ("max-swipe-dp", 0, "", max_swipe_dp, (int64_t)1000000)
  ("short-seqids", 0, "", short_seqids)
  ("no-reextend", 0, "", no_reextend)
  ("no-reorder", 0, "", no_reorder)
  ("file1", 0, "", file1)
  ("file2", 0, "", file2)
  ("key2", 0, "", key2)
  ("motif-mask-file", 0, "", motif_mask_file)
  ("max-motif-len", 0, "", max_motif_len, 30)
  ("chaining-stacked-hsp-ratio", 0, "", chaining_stacked_hsp_ratio, 0.5)
  ("swipe-task-size", 0, "", swipe_task_size, (int64_t)100000000)
  ("minimizer-window", 0, "", minimizer_window_)
  ("min_task_trace_pts", 0, "", min_task_trace_pts, (int64_t)1024)
  ("sketch-size", 0, "", sketch_size)
  ("oid-list", 0, "", oid_list)
  ("bootstrap-block", 0, "", bootstrap_block, (int64_t)1000000)
  ("centroid-factor", 0, "", centroid_factor, (int64_t)3)
  ("timeout", 0, "", timeout)
  ("resume", 0, "", resume)
  ("target_hard_cap", 0, "", target_hard_cap)
  ("mapany", 0, "", mapany)
  ("neighbors", 0, "", neighbors)
  ("reassign-overlap", 0, "", reassign_overlap, 0.3)
  ("reassign-ratio", 0, "", reassign_ratio, 0.5)
  ("reassign-max", 0, "", reassign_max)
  ("add-self-aln", 0, "", add_self_aln)
  ("weighted-gvc", 0, "", weighted_gvc)
  ("hamming-ext", 0, "", hamming_ext)
  ("diag-filter-id", 0, "", diag_filter_id)
  ("diag-filter-cov", 0, "", diag_filter_cov)
  ("strict-gvc", 0, "", strict_gvc)
  ("dbtype", 0, "type of sequences in database file (nucl/prot)", dbstring, string("prot"))
  ("cluster-similarity", 0, "Clustering similarity measure (default=\"normalized_bitscore_global\")", cluster_similarity)
  ("cluster-threshold", 0, "Threshold for the similarity measure (default=50%)", cluster_threshold)
  ("cluster-graph-file", 0, "Filename for dumping the graph or reading the graph if cluster-restart", cluster_graph_file)
  ("cluster-restart", 0, "Restart clustering from dumped graph", cluster_restart)
  ("mcl-expansion", 0, "MCL expansion coefficient (default=2)", cluster_mcl_expansion, (uint32_t)2)
  ("mcl-inflation", 0, "MCL inflation coefficient (default=2.0)", cluster_mcl_inflation, 2.0)
  ("mcl-chunk-size", 0, "MCL chunk size per thread (default=100)", cluster_mcl_chunk_size, (uint32_t)1)
  ("mcl-max-iterations", 0, "MCL maximum iterations (default=100)", cluster_mcl_max_iter, (uint32_t)100)
  ("mcl-sparsity-switch", 0, "MCL switch to sparse matrix computation (default=0.8) ", cluster_mcl_sparsity_switch, 0.8)
  ("mcl-nonsymmetric", 0, "Do not symmetrize the transistion matrix before clustering", cluster_mcl_nonsymmetric)
  ("mcl-stats", 0, "Some stats about the connected components in MCL", cluster_mcl_stats)
  ("cluster-algo", 0, "Clustering algorithm (\"mcl\")", cluster_algo)
  ("approx-backtrace", 0, "", approx_backtrace)
  ("prefix-scan", 0, "", prefix_scan)
  ("narrow-band-cov", 0, "", narrow_band_cov)
  ("narrow-band-factor", 0, "", narrow_band_factor)
  ("anchor-window", 0, "", anchor_window, 12)
  ("anchor-score", 0, "", anchor_score, 1.0)
  ("classic-band", 0, "", classic_band)
  ("no_8bit_extension", 0, "", no_8bit_extension)
  ("anchored-swipe", 0, "", anchored_swipe)
  ("no_chaining_merge_hsps", 0, "", no_chaining_merge_hsps)
  ("pipeline-short", 0, "", pipeline_short)
  ("graph-algo", 0, "", graph_algo, string("gvc"))
  ("tsv-read-size", 0, "", tsv_read_size, int64_t(GIGABYTES))
  ("min-len-ratio", 0, "", min_length_ratio)
  ("max-indirection", 0, "", max_indirection)
  ("aln-out", 0, "", aln_out);
}